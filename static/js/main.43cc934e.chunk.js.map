{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","Poster","alt","Title","Plot","MoviesList","selectedMovie","map","imdbID","getMovie","title","a","fetch","then","response","json","result","FindMovie","getSelectedMovie","useState","foundMovie","setFoundMovie","movieTitle","setMovieTitle","isError","setIsError","handleFindMovie","Response","onSubmit","event","preventDefault","toLowerCase","htmlFor","type","id","placeholder","value","onChange","target","onClick","App","setSelectedMovie","some","someMovie","prevState","ReactDOM","render","document","getElementById"],"mappings":"8TAOaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAa,UAAQ,aAApC,SAEE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,cAAlC,SAAiDD,EAAMK,aAI3D,sBAAKJ,UAAU,UAAU,UAAQ,UAAjC,UACGD,EAAMM,KACP,iCC5BGC,EAA8B,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAG5C,OACE,qBAAKP,UAAU,SAAf,gBACGO,QADH,IACGA,OADH,EACGA,EAAeC,KAAI,SAAAT,GAAK,OACvB,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,uBCbRC,EAAQ,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACDC,MAAM,GAAD,OAHhB,+CAGgB,OAAUF,IACjCG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAFP,cAChBC,EADgB,yBAIfA,GAJe,2CAAH,sDCORC,G,MAA6B,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,iBAC3C,EAAoCC,mBAAuB,MAA3D,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAEMC,EAAe,uCAAG,4BAAAf,EAAA,sEACFF,EAASa,GADP,aAGC,WAFjBxB,EADgB,QAGZ6B,UACRF,GAAW,GAGbJ,EAAcvB,GAPQ,kBASfA,GATe,2CAAH,qDA0BrB,OACE,qCACE,uBACEC,UAAU,aACV6B,SAAU,SAACC,GACTA,EAAMC,iBAlBO,KAAfR,IACGF,GAEME,EAAWS,gBAAkBX,EAAWjB,MAAM4B,eACvDb,EAAiBE,GACjBG,EAAc,IACdF,EAAc,OAJdK,MAaF,UAOE,sBAAK3B,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQiC,QAAQ,cAAjC,yBAIA,qBAAKjC,UAAU,UAAf,SACE,uBACEkC,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZpC,UAAU,kBACVqC,MAAOd,EACPe,SAAU,SAACR,GACLL,GACFC,GAAW,GAGbF,EAAcM,EAAMS,OAAOF,YAKhCZ,EACC,mBAAGzB,UAAU,iBAAb,kDAGE,QAGN,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEkC,KAAK,SACLlC,UAAU,kBACVwC,QAAS,WACY,KAAfjB,GACFI,KAGJ,UAAQ,OARV,4BAcF,qBAAK3B,UAAU,UAAf,SACE,wBACEkC,KAAK,SACLlC,UAAU,oBACVwC,QAAS,WACHnB,GACFF,EAAiBE,GAGnBC,EAAc,MACdE,EAAc,KAEhB,UAAQ,MAXV,qCAmBN,qBAAKxB,UAAU,YAAf,SACGqB,GAAc,cAAC,EAAD,CAAWtB,MAAOsB,WC9G5BoB,EAAgB,WAC3B,MAA0CrB,mBAAkB,IAA5D,mBAAOb,EAAP,KAAsBmC,EAAtB,KAQA,OACE,sBAAK1C,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CACEO,cAAeA,MAGnB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CACEmB,iBAfiB,SAACpB,GACnBQ,EAAcoC,MAAK,SAAAC,GAAS,OAAIA,EAAUnC,SAAWV,EAAMU,WAC9DiC,GAAiB,SAACG,GAAD,4BAAmBA,GAAnB,CAA8B9C,gBCNrD+C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.43cc934e.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\" data-cy=\"card-image\">\n\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movie-title\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  selectedMovie: Movie[] | null;\n}\n\nexport const MoviesList: React.FC<Props> = ({ selectedMovie }) => {\n  // const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {selectedMovie?.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const URL = 'https://www.omdbapi.com/?apikey=130e0d23&t=';\n\nexport const getMovie = async (title: string): Promise<Movie> => {\n  const result = await fetch(`${URL}${title}`)\n    .then(response => response.json());\n\n  return result;\n};\n","import React, { useState } from 'react';\nimport { getMovie } from '../../api';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  getSelectedMovie: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ getSelectedMovie }) => {\n  const [foundMovie, setFoundMovie] = useState<Movie | null>(null);\n  const [movieTitle, setMovieTitle] = useState('');\n  const [isError, setIsError] = useState(false);\n\n  const handleFindMovie = async () => {\n    const movie = await getMovie(movieTitle);\n\n    if (movie.Response === 'False') {\n      setIsError(true);\n    }\n\n    setFoundMovie(movie);\n\n    return movie;\n  };\n\n  const onSubmit = () => {\n    if (movieTitle !== '') {\n      if (!foundMovie) {\n        handleFindMovie();\n      } else if (movieTitle.toLowerCase() === foundMovie.Title.toLowerCase()) {\n        getSelectedMovie(foundMovie);\n        setMovieTitle('');\n        setFoundMovie(null);\n      } else {\n        handleFindMovie();\n      }\n    }\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          onSubmit();\n        }}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={movieTitle}\n              onChange={(event) => {\n                if (isError) {\n                  setIsError(false);\n                }\n\n                setMovieTitle(event.target.value);\n              }}\n            />\n          </div>\n\n          {isError ? (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          ) : null}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => {\n                if (movieTitle !== '') {\n                  handleFindMovie();\n                }\n              }}\n              data-cy=\"find\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                if (foundMovie) {\n                  getSelectedMovie(foundMovie);\n                }\n\n                setFoundMovie(null);\n                setMovieTitle('');\n              }}\n              data-cy=\"add\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        {foundMovie && <MovieCard movie={foundMovie} />}\n      </div>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [selectedMovie, setSelectedMovie] = useState<Movie[]>([]);\n\n  const getSelectedMovie = (movie: Movie) => {\n    if (!selectedMovie.some(someMovie => someMovie.imdbID === movie.imdbID)) {\n      setSelectedMovie((prevState) => [...prevState, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList\n          selectedMovie={selectedMovie}\n        />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          getSelectedMovie={getSelectedMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}